<Application x:Class="ForksnSpoons.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ForksnSpoons"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <!--#region TextBoxes -->
        <!--#region templates-->
        <ControlTemplate x:Key="NoMouseOverTextBoxTemplate" TargetType="TextBox">
            <Border 
                 Background="{TemplateBinding Background}"  
                 BorderBrush="{TemplateBinding BorderBrush}"  
                 BorderThickness="{TemplateBinding BorderThickness}"
                 Height="{TemplateBinding Height}"
                 Width="{TemplateBinding Width}">
                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{x:Static SystemColors.ControlLightBrush}" />
                    <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="NoMouseOverPasswordTemplate" TargetType="PasswordBox">
            <Border 
         Background="{TemplateBinding Background}"  
         BorderBrush="{TemplateBinding BorderBrush}"  
         BorderThickness="{TemplateBinding BorderThickness}"
         Height="{TemplateBinding Height}"
         Width="{TemplateBinding Width}">
                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{x:Static SystemColors.ControlLightBrush}" />
                    <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--#endregion-->
        <!--#region styles-->
        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="BorderBrush" Value="#E98074"/>
            <Setter Property="Foreground" Value="#E98074"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Template" Value="{DynamicResource NoMouseOverTextBoxTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#E85A4F" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True" >
                    <Setter Property="BorderBrush" Value="#E85A4F" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="BorderBrush" Value="#E98074"/>
            <Setter Property="Foreground" Value="#E98074"/>
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Padding" Value="6"/>
            <Setter Property="Template" Value="{DynamicResource NoMouseOverPasswordTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#E85A4F" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True" >
                    <Setter Property="BorderBrush" Value="#E85A4F" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TextArea" TargetType="TextBox">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="BorderBrush" Value="#E98074"/>
            <Setter Property="Foreground" Value="#E98074"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Margin" Value="0,0,0, 30" />
            <Setter Property="TextWrapping" Value="WrapWithOverflow" />
            <Setter Property="Template" Value="{DynamicResource NoMouseOverTextBoxTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#E85A4F" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True" >
                    <Setter Property="BorderBrush" Value="#E85A4F" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
        <!--#endregion-->
        <!--#region TextBlocks & Labels-->
        <!--#region styles-->
        <Style TargetType="TextBlock" x:Key="Header">
            <Setter Property="FontWeight" Value="Black"/>
            <Setter Property="Foreground" Value="#E85A4F" />
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
        </Style>
        <Style TargetType="Label" x:Key="label">
            <Setter Property="FontWeight" Value="Black"/>
            <Setter Property="Foreground" Value="#8e8d8a" />
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Montserrat"/>
        </Style>
        <Style TargetType="Button" x:Key="HyperLink">
            <Setter Property="Foreground"  Value="#E85A4F"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#E98074" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
        <!--#endregion-->
        <!--#region Buttons-->
        <!--#region templates-->
            <ControlTemplate x:Key="NoMouseOverButtonTemplate" TargetType="Button">
                <Border 
                 Background="{TemplateBinding Background}"  
                 BorderBrush="{TemplateBinding BorderBrush}"  
                 BorderThickness="{TemplateBinding BorderThickness}"
                 Height="{TemplateBinding Height}"
                 Width="{TemplateBinding Width}">

                    <ContentPresenter 
                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                 />
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{x:Static SystemColors.ControlLightBrush}" />
                        <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <!--#endregion-->
        <!--#region styles-->
        <Style x:Key="button" TargetType="Button">
            <Setter Property="Width" Value="170" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#E98074" />
            <Setter Property="FontFamily" Value="Montserrat" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="AntiqueWhite" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E85A4F" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="logoutButton" TargetType="Button">
            <Setter Property="Opacity" Value="0.5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="0.8"/>
                    <Setter Property="Background" Value="#8e8d8a"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="dtgButton" TargetType="Button" BasedOn="{StaticResource button}">
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
        </Style>
        <!--#endregion-->
        <!--#endregion-->
        <!--#region Datagrid & his elements-->
        <!--#region templates -->
            
        <!--#endregion-->
        <!--#region styles-->
        <Style x:Key="CellStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="#00000000" />
            
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#E85A4F" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="DataGridRow" x:Key="RowStyle">
            
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#E85A4F" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E98074" />
                    <Setter Property="Foreground" Value="WhiteSmoke" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="dtgHeader" TargetType="DataGridColumnHeader" >
            <!--<Setter Property="Height" Value="45" />-->
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="White" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#AAE98074" />
                    <Setter Property="Foreground" Value="WhiteSmoke" />
                    
                </Trigger>
                <Trigger Property="SortDirection" Value="Ascending">
                    <Setter Property="Background" Value="#AAE98074" />
                    <Setter Property="Foreground" Value="WhiteSmoke" />
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" x:Name="HeaderContainer">
                                    <TextBlock Text="{Binding}" TextWrapping="WrapWithOverflow" MaxWidth="{Binding ActualWidth, ElementName=HeaderContainer}"/>
                                    <fa:FontAwesome Icon="ArrowDown" />
                                </StackPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="SortDirection" Value="Descending">
                    <Setter Property="Background" Value="#AAE98074" />
                    <Setter Property="Foreground" Value="WhiteSmoke" />
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" x:Name="HeaderContainer">
                                    <TextBlock Text="{Binding}" TextWrapping="Wrap" MaxWidth="{Binding ActualWidth, ElementName=HeaderContainer}"/>
                                    <fa:FontAwesome Icon="ArrowUp" />
                                </StackPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
            
        </Style>
       <!--#endregion-->
       <!--#endregion-->
        <!--#region ComboBoxes -->
        <!--#region templates -->
        <ControlTemplate TargetType="{x:Type ComboBox}" x:Key="ComboBoxTemplate">
            <Border MinHeight="30" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid x:Name="CbxContainer">

                    <ToggleButton x:Name="ToggleButton" Foreground="Black" BorderThickness="0" BorderBrush="Transparent" Content="{TemplateBinding SelectedItem}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border 
                                  Background="{TemplateBinding Background}"  
                                  BorderBrush="{TemplateBinding BorderBrush}"  
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Height="{TemplateBinding Height}"
                                  Width="{TemplateBinding Width}">

                                    <ContentPresenter
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="{x:Static SystemColors.ControlLightBrush}" />
                                        <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ToggleButton.Template>
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Background" Value="#FBF8ED" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="#E85A4F" />
                                        <Setter Property="Background" Value="#44E85A4F" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Popup Margin="0" x:Name="Popup" Width="{Binding ActualWidth, ElementName=CbxContainer}" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" PlacementTarget="{Binding ElementName=ToggleButton}" HorizontalAlignment="Stretch">
                        <Border Background="White" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Stretch" >
                            <ScrollViewer HorizontalAlignment="Stretch" x:Name="ScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                <StackPanel IsItemsHost="True" MinHeight="30" />
                            </ScrollViewer>
                        </Border>
                    </Popup>
                    <fa:FontAwesome Icon="AngleDown" Panel.ZIndex="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0">
                       
                    </fa:FontAwesome>
                </Grid>
            </Border>
        </ControlTemplate>
        <!--#endregion-->
        <!--#region styles -->
        <Style TargetType="ComboBox">
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush" Value="#E98074" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E98074" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
        <!--#endregion-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ToastNotifications.Messages;component/Themes/Default.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
